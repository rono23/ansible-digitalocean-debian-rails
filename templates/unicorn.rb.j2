worker_processes {{ unicorn.worker_processes }}
working_directory "{{ rails.current_path }}"

pid "{{ unicorn.pid }}"
listen "{{ unicorn.socket }}"
timeout {{ unicorn.timeout }}
preload_app {{ unicorn.preload_app }}
stderr_path "{{ unicorn.stderr_path }}"
stdout_path "{{ unicorn.stdout_path }}"

GC.respond_to?(:copy_on_write_friendly=) and
GC.copy_on_write_friendly = true

check_client_connection false

before_fork do |server, worker|
  defined?(ActiveRecord::Base) and
  ActiveRecord::Base.connection.disconnect!

  old_pid = "#{server.config[:pid]}.oldbin"
  if old_pid != server.pid
    begin
      sig = (worker.nr + 1) >= server.worker_processes ? :QUIT : :TTOU
      Process.kill(sig, File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end
end

after_fork do |server, worker|
  defined?(ActiveRecord::Base) and
  ActiveRecord::Base.establish_connection
end
